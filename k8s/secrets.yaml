# QFLARE Kubernetes Secrets
# Contains sensitive configuration data

apiVersion: v1
kind: Secret
metadata:
  name: qflare-secrets
  namespace: qflare
type: Opaque
data:
  # PostgreSQL Configuration (base64 encoded)
  postgres-password: cWZsYXJlX3Byb2RfcGFzc3dvcmQ=  # qflare_prod_password
  database-url: cG9zdGdyZXNxbDovL3FmbGFyZTpxZmxhcmVfcHJvZF9wYXNzd29yZEBwb3N0Z3Jlczo1NDMyL3FmbGFyZV9kYg==  # postgresql://qflare:qflare_prod_password@postgres:5432/qflare_db
  
  # JWT Configuration
  jwt-secret: WW91ck5ldmVyR3Vlc3NUaGlzU3VwZXJTZWNyZXRKV1RLZXlGb3JRRkxBUkU=  # YourNeverGuessThisSuperSecretJWTKeyForQFLARE
  
  # Intel SGX Configuration
  sgx-spid: WU9VUl9TR1hfU1BJRF9IRVJf  # YOUR_SGX_SPID_HERE
  sgx-ias-key: WU9VUl9TR1hfSUFTX0tFWV9IRVJF  # YOUR_SGX_IAS_KEY_HERE
  
  # AMD SEV Configuration
  sev-attestation-server: aHR0cHM6Ly9zZXYtYXR0ZXN0YXRpb24uZXhhbXBsZS5jb20=  # https://sev-attestation.example.com
  
  # Grafana Configuration
  grafana-password: YWRtaW5fcGFzc3dvcmRfY2hhbmdlX21l  # admin_password_change_me
  
  # API Keys and Tokens
  monitoring-api-key: bW9uaXRvcmluZ19hcGlfa2V5X2hlcmU=  # monitoring_api_key_here
  backup-encryption-key: YmFja3VwX2VuY3J5cHRpb25fa2V5X2hlcmU=  # backup_encryption_key_here

---
# TLS Certificates Secret
apiVersion: v1
kind: Secret
metadata:
  name: qflare-tls-certs
  namespace: qflare
type: kubernetes.io/tls
data:
  # Server Certificate (base64 encoded PEM)
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZackNDQTFhZ0F3SUJBZ0lVQzUxMG1pT3k4UXVIK1hET1lkT2ZwenZMSWFZd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JERUxNQWtHQTFVRUJoTUNWVk14RWpBUUJnTlZCQWdNQ1VObGNuUnBabWxqWVhSbE1RMHdDd1lEVlFRSApEQVJVWlhOME1SSXdFQVlEVlFRRERBbFVaWE4wSUVOQk1CNFhEVEF4TURBd01UQXdNREF3TUZvWERUQXlNREF3Ck1UQXdNREF3TUZvd1JERUxNQWtHQTFVRUJoTUNWVk14RWpBUUJnTlZCQWdNQ1VObGNuUnBabWxqWVhSbE1RMHcKQ3dZRFZRUUhEQVJVWlhOME1SSXdFQVlEVlFRRERBbFVaWE4wSUVOQk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRgpBQU9DQWc4QU1JSUNDZ0tDQWdFQXE1dWNkOGh3SkcyMDB4d1h1ekl5aGdpdGc5RlI1TW1jZWdCSHBQSE9qSFZkClZSYmx5V3Z4VkNLVVJ6VXZjRTNrUmJOR1l5YzY5Y3RNRnV0U2J0Q2FveVNZZW5HS244eHhUZTJiMUo4alNFd2MKUFkrY0RGaUNvNjE1bWsrdkNKL0dSQzIydEJ4OHp1YXJJWGJkcHhBVGh2d3ZvK2YzSUpKS21VU2JJMzZLSG5HYQo=
  
  # Private Key (base64 encoded PEM)
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ3JtNXgzeUhBa2JiVFQKSEJlN01qS0dDSzJEMFZIa3ladDZBRWVrOGM2TWRWMVZGDXZMYTJBQ1VSeVV2Y0Uza1JiTkdZeWM2OWN0TUZ1dApTYnRDYW95U1llbktHbjh4eFRlMmIxSjhqU0V3Y1BZK2NERmlDbzYxNW1rK3ZDSi9HUkMyMnRCeDh6dWFySVhiCmRweEFUaHZ3dm8rZjNJSkpLbVVTYkkzNktIbkdhVnNRUkJKSEgxVWZjUy9lVm53RGFNa3E5M3dkTWdBL01EdWYKbXRwK3k3K2lXZmJ0ZFN1blJQOHJuc2pQUkYzVWExRlByTDNUdFJlYzhBamhGbXQ1bUZYdVJWMzlmM0VIZEtHWApRZFZoMDJJWWJYZXN2RFlYM3RVSVRJMVluT0ZxNjBxSWwreDFZR3d0Y29oQmoyNWJWSHdFaXZYSFBZbWNhbkJHCm9ONmZzVmlzb1VwRGZsZHQxRU9ZT2pUK01iZXVDUVl1VjNEbDB1WnE4V3JUSHhzQWdITXlpeEhTZkhPbS9SMTQKRjQ3WTRnSzI4eWJiYVQ1dHZXWWxERElCZmtyNGpZZm0vMmJGUXNSUCsrUElReVZpWWtGWUpPdGJUY3RiN0VpNgpYUHZEYTdxcU9UR09FUjBQUlVkQVNrdzd4S0lGajVQVHd5cTRhSFNiQWdNQkFBRUNnZ0VBV3FJRmxWU0MzcFlSCkZ6cWQwdEt5TXNHeG5FdFFnODZvNWdHSU1USW5kU1lFYXQ1Q1A0WTI0TXlhWG9wZXZxdk5xUlcxZ2YydWgzNmMKQjBsbUN5NFVQYmxNc0VhQm5GNjNJY3dJU216Z3ZLTUdOdVgvOXZwVlREUXFuM0JPaXNvVGEybGFOdGpLUzJqNgpQNGRsOVZ5cCtjNTUvSWM2REd0MEFHT1ZZZGpsQ0lJVnI1UER6dEFPVE85dXdmL3hwQzEzK1RydElmYUlORzVOCk1iQ2lwMm9SSkVHOWFXNktDWkNYOTNCR1p1RTZaQWR1RzZMSGMvYkxIMDN4elRVSmEyaXJEV3hZQ1lGZUFMNmQKSDZOOGdSMU8vcDJPUjRCQVZYSCsyRk1LZUhWclhSYUx3N3dHWk9mSGNLUzBocUdDZ2JCQV9lZTVLRzQ1L01kcQp5V1p3bjJzQWdCdFFkdWdkNWpLQkM5ZGVSSkJDUDk0MUtUZW5RRmdSS0t4UWExNlY5TjJQV2RPTlJPS1dFZk1HClY4YWFwOUczZWJBUnZqWlJGOWpnTzF1dUs3dGpTa3Z6RXFNVGpYTW1vRlJhL0Y0VHNzN2gxSmNpdGtveGZRVEEKaFlWNXNqUHVmZlpiNUN1Rk1KWWFHSWpLbFNOLzRhcVR0STFCOVNDbXdKUWlBSDU1a1V6L21aV09DZkFBd0lCCkFnRENBZ1FEQWdCQWdLQ0FnRUF0b2wxcE0yTWswcXBzdVkwc3hvWHVQQWFHblR0RGM0K1V0UWlEbkxYNElUVzYKRWJiQ3JjSDJIUUROVGd2LwAKUURfYmlGWVJBUUFBZ0JAQVFpOHRxbDRyUHlWcVl3RHdZSkowVERTeFB2aCt4V0U2eFNPc05Cc0pPak5jNTRvQT0=

---
# RBAC Configuration
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qflare-service-account
  namespace: qflare

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: qflare
  name: qflare-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: qflare-role-binding
  namespace: qflare
subjects:
- kind: ServiceAccount
  name: qflare-service-account
  namespace: qflare
roleRef:
  kind: Role
  name: qflare-role
  apiGroup: rbac.authorization.k8s.io

---
# Network Policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: qflare-network-policy
  namespace: qflare
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: qflare
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: qflare
  - to: []  # Allow egress to external services
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS