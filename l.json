{
  "name": "linkedin browserflow",
  "nodes": [
    {
      "parameters": {
        "operation": "scrapeProfilesFromSearch",
        "searchTerm": "={{ $json['Company Name'] }}",
        "city": "={{ $json['location'] }}",
        "nrOfPages": 2,
        "requestOptions": {}
      },
      "type": "n8n-nodes-browserflow.browserflow",
      "typeVersion": 1,
      "position": [
        96,
        176
      ],
      "id": "56310844-e1ed-4334-bf85-f2148c3e6e4a",
      "name": "Scrape profiles from a linkedin search",
      "credentials": {
        "browserflowApi": {
          "id": "1ibaWuazb7uQuMRN",
          "name": "Browserflow account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0cacd157-6e7e-4ee9-a2bf-c593ea57aa92",
              "leftValue": "={{ $json.summary }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        448,
        176
      ],
      "id": "86f6b39a-a058-4a03-8e43-f478a32f54b0",
      "name": "If"
    },
    {
      "parameters": {
        "inputText": "=Summary : {{ $json.tagline }}",
        "categories": {
          "categories": [
            {
              "category": "yes",
              "description": "=Analyze whether he is working currently in the company : {{ $('On form submission').item.json['Company Name'] }}"
            },
            {
              "category": "no",
              "description": "=If he is not working in the current company : {{ $('On form submission').item.json['Company Name'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        560,
        448
      ],
      "id": "20672af3-62e5-43af-adf1-a6bcfd1e3d1f",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        272,
        176
      ],
      "id": "0f6b0405-c6a4-4d43-ac49-2a4be55a19e4",
      "name": "Split Out"
    },
    {
      "parameters": {
        "formTitle": "Enter the company",
        "formDescription": "Please enter the company to make linkedin connections through Automation.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Company Name",
              "placeholder": "Enter the company name"
            },
            {
              "fieldLabel": "Role",
              "placeholder": "Ex : Web developer intern"
            },
            {
              "fieldLabel": "location",
              "placeholder": "Ex: Hyderabad"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -80,
        176
      ],
      "id": "e56abdb9-77b0-42e8-935f-5578a1f1cdca",
      "name": "On form submission",
      "webhookId": "da9da268-521e-4edf-a253-667b3f1518cb"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        816,
        -96
      ],
      "id": "2e7462c4-0cc8-4acb-9de1-441d56fa4530",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Summary : {{ $json.summary }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a professional validation assistant that determines whether a person's role and position at a company makes them an appropriate recipient for job application materials.\nYour Task\nAnalyze the person's current position at {{ $('On form submission').item.json['Company Name'] }} and determine if they have hiring authority or influence in recruitment decisions.\nValidation Criteria\nThe person must hold one of the following types of positions:\nPRIMARY DECISION MAKERS:\n\nCEO, President, Managing Director\nFounder, Co-founder, Owner\nChief Human Resources Officer (CHRO)\nVP of Human Resources, Head of HR, HR Director\nHiring Manager, Talent Acquisition Lead\nDepartment Head for relevant department,\nHuman Resources.\n\nSENIOR ROLES WITH HIRING INFLUENCE:\n\nC-Suite executives (CTO, CFO, COO, etc.)\nVice President level positions\nSenior Director, Senior Manager (with team responsibility)\nPractice Lead, Team Lead (in relevant department)\n\nAnalysis Process\n\nExtract the person's exact job title and role\nIdentify their level of seniority and decision-making authority\nAssess if they would be involved in hiring decisions for the type of role you're seeking\nConsider company size - In smaller companies, more roles may have hiring influence\n\nOutput Format\nProvide only one of the following responses:\n\nYES - If the person has hiring authority or significant influence in recruitment\nNO - If the person does not have hiring authority or influence\n\nExamples of YES responses:\n\nHR Manager at [Company]\nCEO of [Company]\nSenior Software Engineering Manager (for tech roles)\nFounder & CTO\nDirector of Operations\nVP of Sales (for sales roles)\n\nExamples of NO responses:\n\nJunior Software Developer\nMarketing Intern\nCustomer Support Representative\nAdministrative Assistant\nEntry-level Analyst\n\nRemember: Only individuals with hiring authority, senior leadership roles, or direct involvement in recruitment processes should receive job applications."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1024,
        -80
      ],
      "id": "91c7b700-f512-4ebb-8eca-53dddf96d752",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        992,
        64
      ],
      "id": "1b54b096-8136-46fe-a2dc-50cb29744138",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "IAKidLplWtpSxUQu",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"valid_person\" : \"yes\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1168,
        64
      ],
      "id": "c8f3286d-b893-44aa-87fc-0a35a54bb868",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "linkedinUrl": "={{ $('Loop Over Items').item.json.linkedin_url }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-browserflow.browserflow",
      "typeVersion": 1,
      "position": [
        1664,
        -80
      ],
      "id": "afcae8dc-8607-4502-a6f8-7b3b8d9808a1",
      "name": "Check if a person is a connection",
      "alwaysOutputData": true,
      "credentials": {
        "browserflowApi": {
          "id": "1ibaWuazb7uQuMRN",
          "name": "Browserflow account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9d8e609c-e82f-4b64-99be-2b0986429a55",
              "leftValue": "={{ $json.is_connection }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1808,
        -80
      ],
      "id": "924c7886-5792-41ac-a454-0fa6cd8a63a6",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "sendConnectionInvite",
        "linkedinUrl": "={{ $('Loop Over Items').item.json.linkedin_url }}",
        "addMessage": true,
        "requestOptions": {}
      },
      "type": "n8n-nodes-browserflow.browserflow",
      "typeVersion": 1,
      "position": [
        2032,
        112
      ],
      "id": "f70a2cfc-6e26-4ddd-bd37-96cac9280e09",
      "name": "Send a linked in connection invite",
      "alwaysOutputData": true,
      "credentials": {
        "browserflowApi": {
          "id": "1ibaWuazb7uQuMRN",
          "name": "Browserflow account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "sendMessage",
        "linkedinUrl": "={{ $('Loop Over Items').item.json.linkedin_url }}",
        "message": "=Hey hi, \nRecently seen there are openings in your company in the role : {{ $('On form submission').item.json['Role'] }}, ",
        "requestOptions": {}
      },
      "type": "n8n-nodes-browserflow.browserflow",
      "typeVersion": 1,
      "position": [
        2032,
        -96
      ],
      "id": "0d1f71df-014d-4a71-885c-59d6bb05ab2d",
      "name": "Send a linkedin message",
      "alwaysOutputData": true,
      "credentials": {
        "browserflowApi": {
          "id": "1ibaWuazb7uQuMRN",
          "name": "Browserflow account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        544,
        640
      ],
      "id": "64d6c190-87a0-4a10-be59-67d7cfae0293",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "IAKidLplWtpSxUQu",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        928,
        432
      ],
      "id": "a4d11a26-1775-4c40-94d3-cb5c38813caa",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Summary : {{ $json.summary }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a professional validation assistant that determines whether a person's role and position at a company makes them an appropriate recipient for job application materials.\nYour Task\nAnalyze the person's current position at {{ $('On form submission').item.json['Company Name'] }} and determine if they have hiring authority or influence in recruitment decisions.\nValidation Criteria\nThe person must hold one of the following types of positions:\nPRIMARY DECISION MAKERS:\n\nCEO, President, Managing Director\nFounder, Co-founder, Owner\nChief Human Resources Officer (CHRO)\nVP of Human Resources, Head of HR, HR Director\nHiring Manager, Talent Acquisition Lead\nDepartment Head for relevant department\n\nSENIOR ROLES WITH HIRING INFLUENCE:\n\nC-Suite executives (CTO, CFO, COO, etc.)\nVice President level positions\nSenior Director, Senior Manager (with team responsibility)\nPractice Lead, Team Lead (in relevant department)\n\nAnalysis Process\n\nExtract the person's exact job title and role\nIdentify their level of seniority and decision-making authority\nAssess if they would be involved in hiring decisions for the type of role you're seeking\nConsider company size - In smaller companies, more roles may have hiring influence\n\nOutput Format\nProvide only one of the following responses:\n\nYES - If the person has hiring authority or significant influence in recruitment\nNO - If the person does not have hiring authority or influence\n\nExamples of YES responses:\n\nHR Manager at [Company]\nCEO of [Company]\nSenior Software Engineering Manager (for tech roles)\nFounder & CTO\nDirector of Operations\nVP of Sales (for sales roles)\n\nExamples of NO responses:\n\nJunior Software Developer\nMarketing Intern\nCustomer Support Representative\nAdministrative Assistant\nEntry-level Analyst\n\nRemember: Only individuals with hiring authority, senior leadership roles, or direct involvement in recruitment processes should receive job applications."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1136,
        448
      ],
      "id": "2816f46f-4622-4178-8449-b3ab8438bbac",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1104,
        592
      ],
      "id": "ef294da5-a99c-471b-b843-df6d867db6aa",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "IAKidLplWtpSxUQu",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"valid_person\" : \"yes\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1280,
        592
      ],
      "id": "3c1f6797-3c3f-49c4-88f2-d697549d1fbe",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "linkedinUrl": "={{ $('Loop Over Items1').item.json.linkedin_url }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-browserflow.browserflow",
      "typeVersion": 1,
      "position": [
        1728,
        432
      ],
      "id": "6d0ee80f-0fac-4046-9fad-6b7ce1227196",
      "name": "Check if a person is a connection1",
      "alwaysOutputData": true,
      "credentials": {
        "browserflowApi": {
          "id": "1ibaWuazb7uQuMRN",
          "name": "Browserflow account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9d8e609c-e82f-4b64-99be-2b0986429a55",
              "leftValue": "={{ $json.is_connection }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1904,
        432
      ],
      "id": "fde74f25-94d2-44a3-b1e8-0bda6f320bde",
      "name": "If2"
    },
    {
      "parameters": {
        "operation": "sendConnectionInvite",
        "linkedinUrl": "={{ $('Loop Over Items1').item.json.linkedin_url }}",
        "addMessage": true,
        "message": "=Hey hi,  Recently seen there are openings in your company in the role : {{ $('On form submission').item.json['Role'] }}, ",
        "requestOptions": {}
      },
      "type": "n8n-nodes-browserflow.browserflow",
      "typeVersion": 1,
      "position": [
        2096,
        624
      ],
      "id": "57d88ac4-8023-436e-a369-85f7a13e4c04",
      "name": "Send a linked in connection invite1",
      "alwaysOutputData": true,
      "credentials": {
        "browserflowApi": {
          "id": "1ibaWuazb7uQuMRN",
          "name": "Browserflow account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "sendMessage",
        "linkedinUrl": "={{ $('Loop Over Items1').item.json.linkedin_url }}",
        "message": "=Hey hi, \nRecently seen there are openings in your company in the role : {{ $('On form submission').item.json['Role'] }},",
        "requestOptions": {}
      },
      "type": "n8n-nodes-browserflow.browserflow",
      "typeVersion": 1,
      "position": [
        2096,
        416
      ],
      "id": "22984612-2847-402b-8bce-4c0132f6ee11",
      "name": "Send a linkedin message1",
      "alwaysOutputData": true,
      "credentials": {
        "browserflowApi": {
          "id": "1ibaWuazb7uQuMRN",
          "name": "Browserflow account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ea6ae520-cb0a-4c70-b5f0-125063faedef",
              "leftValue": "={{ $json.output.valid_person.toLowerCase() }}",
              "rightValue": "yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1376,
        -64
      ],
      "id": "84d25fef-dd21-4a09-9c34-309a3372e76e",
      "name": "If3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5d76e370-33f7-4847-9191-3f00c8de9c6f",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1456,
        448
      ],
      "id": "9c27bf19-fcc9-4c99-86b1-8319b95e54c0",
      "name": "If4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2592,
        272
      ],
      "id": "d8b6d148-23a4-4221-bb14-a61b1419b3d2",
      "name": "Merge"
    }
  ],
  "pinData": {},
  "connections": {
    "Scrape profiles from a linkedin search": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Scrape profiles from a linkedin search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if a person is a connection": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Send a linkedin message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a linked in connection invite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a linkedin message": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a linked in connection invite": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Check if a person is a connection1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Send a linkedin message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a linked in connection invite1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a linked in connection invite1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a linkedin message1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Check if a person is a connection",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Check if a person is a connection1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1f0c31c7-202a-4a42-8c67-f3d71395e813",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2955377a2ddabbc8444c96b940f08d1bf2799daa46abe1c33d82023d0dc8bc59"
  },
  "id": "auPUY2boC7oDBA0T",
  "tags": []
}