"""Initial schema with quantum key exchange models

Revision ID: 5532dee592fb
Revises: 
Create Date: 2025-09-18 00:16:20.789305

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5532dee592fb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('device_id', sa.String(length=255), nullable=False),
    sa.Column('device_type', sa.String(length=50), nullable=False),
    sa.Column('organization', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('trust_score', sa.Float(), nullable=True),
    sa.Column('public_key', sa.LargeBinary(), nullable=True),
    sa.Column('capabilities', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('enrollment_token', sa.String(length=255), nullable=True),
    sa.Column('certificate_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('security_level', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('device_id')
    )
    op.create_index('idx_device_created', 'devices', ['created_at'], unique=False)
    op.create_index('idx_device_last_seen', 'devices', ['last_seen'], unique=False)
    op.create_index('idx_device_organization', 'devices', ['organization'], unique=False)
    op.create_index('idx_device_status', 'devices', ['status'], unique=False)
    op.create_table('enrollment_tokens',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('organization', sa.String(length=255), nullable=False),
    sa.Column('device_type', sa.String(length=50), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('used_count', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('first_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('used_by_devices', sa.Text(), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token'),
    sa.UniqueConstraint('token', name='uq_enrollment_token')
    )
    op.create_index('idx_token_created', 'enrollment_tokens', ['created_at'], unique=False)
    op.create_index('idx_token_expires', 'enrollment_tokens', ['expires_at'], unique=False)
    op.create_index('idx_token_organization', 'enrollment_tokens', ['organization'], unique=False)
    op.create_index('idx_token_status', 'enrollment_tokens', ['status'], unique=False)
    op.create_table('system_configuration',
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('data_type', sa.String(length=20), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('min_value', sa.Float(), nullable=True),
    sa.Column('max_value', sa.Float(), nullable=True),
    sa.Column('allowed_values', sa.Text(), nullable=True),
    sa.Column('validation_regex', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_modified_by', sa.String(length=255), nullable=True),
    sa.Column('requires_restart', sa.Boolean(), nullable=True),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index('idx_config_category', 'system_configuration', ['category'], unique=False)
    op.create_index('idx_config_updated', 'system_configuration', ['updated_at'], unique=False)
    op.create_table('key_exchange_sessions',
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=False),
    sa.Column('algorithm', sa.String(length=50), nullable=False),
    sa.Column('public_key', sa.LargeBinary(), nullable=True),
    sa.Column('encapsulated_secret', sa.LargeBinary(), nullable=True),
    sa.Column('shared_secret_hash', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('security_level', sa.Integer(), nullable=True),
    sa.Column('exchange_duration_ms', sa.Float(), nullable=True),
    sa.Column('client_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('timestamp_derived', sa.Boolean(), nullable=True),
    sa.Column('nonce', sa.String(length=255), nullable=True),
    sa.Column('time_window_seconds', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.device_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_index('idx_session_algorithm', 'key_exchange_sessions', ['algorithm'], unique=False)
    op.create_index('idx_session_created', 'key_exchange_sessions', ['created_at'], unique=False)
    op.create_index('idx_session_device', 'key_exchange_sessions', ['device_id'], unique=False)
    op.create_index('idx_session_expires', 'key_exchange_sessions', ['expires_at'], unique=False)
    op.create_index('idx_session_status', 'key_exchange_sessions', ['status'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_category', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('event_data', sa.Text(), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('client_ip', sa.String(length=45), nullable=True),
    sa.Column('endpoint', sa.String(length=255), nullable=True),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('threat_level', sa.Integer(), nullable=True),
    sa.Column('signature', sa.LargeBinary(), nullable=True),
    sa.Column('signature_verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.device_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['key_exchange_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_category', 'audit_logs', ['event_category'], unique=False)
    op.create_index('idx_audit_device', 'audit_logs', ['device_id'], unique=False)
    op.create_index('idx_audit_event_type', 'audit_logs', ['event_type'], unique=False)
    op.create_index('idx_audit_severity', 'audit_logs', ['severity'], unique=False)
    op.create_index('idx_audit_threat_level', 'audit_logs', ['threat_level'], unique=False)
    op.create_index('idx_audit_timestamp', 'audit_logs', ['event_timestamp'], unique=False)
    op.create_table('performance_metrics',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('component', sa.String(length=100), nullable=True),
    sa.Column('metric_metadata', sa.Text(), nullable=True),
    sa.Column('measured_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.device_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['key_exchange_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_metric_component', 'performance_metrics', ['component'], unique=False)
    op.create_index('idx_metric_device', 'performance_metrics', ['device_id'], unique=False)
    op.create_index('idx_metric_measured', 'performance_metrics', ['measured_at'], unique=False)
    op.create_index('idx_metric_name', 'performance_metrics', ['metric_name'], unique=False)
    op.create_index('idx_metric_type', 'performance_metrics', ['metric_type'], unique=False)
    op.create_table('security_events',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('threat_type', sa.String(length=50), nullable=False),
    sa.Column('threat_category', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('detection_method', sa.String(length=100), nullable=True),
    sa.Column('indicators', sa.Text(), nullable=True),
    sa.Column('mitigation_applied', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('detected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('context_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.device_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['key_exchange_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_security_detected', 'security_events', ['detected_at'], unique=False)
    op.create_index('idx_security_device', 'security_events', ['device_id'], unique=False)
    op.create_index('idx_security_severity', 'security_events', ['severity'], unique=False)
    op.create_index('idx_security_status', 'security_events', ['status'], unique=False)
    op.create_index('idx_security_threat_type', 'security_events', ['threat_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_security_threat_type', table_name='security_events')
    op.drop_index('idx_security_status', table_name='security_events')
    op.drop_index('idx_security_severity', table_name='security_events')
    op.drop_index('idx_security_device', table_name='security_events')
    op.drop_index('idx_security_detected', table_name='security_events')
    op.drop_table('security_events')
    op.drop_index('idx_metric_type', table_name='performance_metrics')
    op.drop_index('idx_metric_name', table_name='performance_metrics')
    op.drop_index('idx_metric_measured', table_name='performance_metrics')
    op.drop_index('idx_metric_device', table_name='performance_metrics')
    op.drop_index('idx_metric_component', table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index('idx_audit_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_threat_level', table_name='audit_logs')
    op.drop_index('idx_audit_severity', table_name='audit_logs')
    op.drop_index('idx_audit_event_type', table_name='audit_logs')
    op.drop_index('idx_audit_device', table_name='audit_logs')
    op.drop_index('idx_audit_category', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index('idx_session_status', table_name='key_exchange_sessions')
    op.drop_index('idx_session_expires', table_name='key_exchange_sessions')
    op.drop_index('idx_session_device', table_name='key_exchange_sessions')
    op.drop_index('idx_session_created', table_name='key_exchange_sessions')
    op.drop_index('idx_session_algorithm', table_name='key_exchange_sessions')
    op.drop_table('key_exchange_sessions')
    op.drop_index('idx_config_updated', table_name='system_configuration')
    op.drop_index('idx_config_category', table_name='system_configuration')
    op.drop_table('system_configuration')
    op.drop_index('idx_token_status', table_name='enrollment_tokens')
    op.drop_index('idx_token_organization', table_name='enrollment_tokens')
    op.drop_index('idx_token_expires', table_name='enrollment_tokens')
    op.drop_index('idx_token_created', table_name='enrollment_tokens')
    op.drop_table('enrollment_tokens')
    op.drop_index('idx_device_status', table_name='devices')
    op.drop_index('idx_device_organization', table_name='devices')
    op.drop_index('idx_device_last_seen', table_name='devices')
    op.drop_index('idx_device_created', table_name='devices')
    op.drop_table('devices')
    # ### end Alembic commands ###
